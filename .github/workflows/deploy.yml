name: Deploy Webapp to Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:

  build-frontend-and-push:

    runs-on: ubuntu-latest

    steps:
    - name: Check out the repo
      uses: actions/checkout@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: apolloxiv
        password: ${{ secrets.DOCKER_HUB_API_KEY }}
      
    - name: Build and push the Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: ./frontend
        tags: apolloxiv/frontend
        push: true
        
  build-backend-and-push:

    runs-on: ubuntu-latest

    steps:
    - name: Check out the repo
      uses: actions/checkout@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: apolloxiv
        password: ${{ secrets.DOCKER_HUB_API_KEY }}
      
    - name: Build and push the Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: ./backend
        tags: apolloxiv/backend
        push: true
        
  build-nginx-and-push:

    runs-on: ubuntu-latest

    steps:
    - name: Check out the repo
      uses: actions/checkout@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: apolloxiv
        password: ${{ secrets.DOCKER_HUB_API_KEY }}
      
    - name: Build and push the Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: ./nginx
        tags: apolloxiv/nginx
        push: true

# Create .env file in /deploymentPackage/

  create-and-upload-pkg:
    runs-on: ubuntu-latest
    environment: malbolge
    steps:
    - uses: actions/checkout@v3
    - name: Create .env file
      run: touch deploymentPackage/.env
    - name: Copy contents
      run: echo "${{ secrets.ENV_FILE }}" > deploymentPackage/.env
    - run: cat prod.yml > ./deploymentPackage/docker-compose.yml
    - uses: SamKirkland/web-deploy@v1
      with:
        target-server: ${{ secrets.ENV_IP_ADDR }}
        remote-user: ec2-user
        private-ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
        destination-path: /home/deployments/pkg-${{ github.run_number }}/
        source-path: ./deploymentPackage/

# WAIT FOR ALL OTHER JOBS TO FINISH

  activate-package:
    runs-on: ubuntu-latest
    needs: [build-nginx-and-push, build-frontend-and-push, build-backend-and-push, create-and-upload-pkg]
    environment: malbolge
    steps:
    - name: Setup SSH key
      run: echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/secret.pem
    - run: cat ~/secret.pem
    - name: run package
      run: ssh ec2-user@${{ secrets.ENV_IP_ADDR }} -i ~/secret.pem "cd /home/deployments/pkg-${{ github.run_number }}/; sudo sh up.sh"
